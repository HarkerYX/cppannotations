In the previous sections the definition and some of the features of typelists
were discussed. Most bf(C++) programmers consider typelists both
exciting and an intellectual chalenge, honing their skills in the area of
recursive programming.

But there's more to typelist than a mere intellectual challenge. In the final
sections of this chapter we'll cover the following topics:
will be covered:
    itemization(
    it() Creating classes from a typelist.nl() 
       Here the aim is to construct a new class consisting of instantiations
        of an existing basic template for each of the types mentined in a
        provided typelist;
    it() Accessing data members from the thus constructed conglomerate class
        by index, rather than name;
    )

Again, much (and more) of the materials covered below is found in
        hi(Alexandrescu, A.)
    Alexandrescu's (2001) book.  Hopefully the current section is an tasty
appetizer for the main courses offered by Andrei Alexandrescu.
