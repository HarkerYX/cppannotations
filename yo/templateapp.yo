INCLUDEFILE(mailus)

includefile(templateapp/intro)

sect(Subtleties)
    includefile(templateapp/subtle)

sect(Template Meta Programming)

    subsect(Values according to templates)
    includefile(templateapp/values)

        lsubsubsect(INTTYPE)(Converting integral types to types)
        includefile(templateapp/int2type)

    lsubsect(ALTERNATIVES)(Selecting alternatives using templates)
    includefile(templateapp/alternatives)

    subsect(Templates: Iterations by Recursion)
    includefile(templateapp/iterating)

sect(Template template parameters)
includefile(templateapp/templateparam)

    subsect(Policy classes)
    includefile(templateapp/policies)

        subsubsect(The destructor of Policy classes)

    subsect(Template template parameters)
    includefile(templateapp/templateparam2)

    subsect(Parameterizing structure)
    includefile(templateapp/structure)

COMMENT(
Reductio ad absurdum (Latin: "reduction to the absurd") also known as an
apagogical argument, reductio ad impossibile, or proof by contradiction, is a
type of logical argument where one assumes a claim for the sake of argument,
derives an absurd or ridiculous outcome, and then concludes that the original
assumption must have been wrong as it led to an absurd result.

http://en.wikipedia.org/wiki/Reductio_ad_absurdum
END)

lsect(TRAIT)(Trait classes)
    includefile(templateapp/trait)

sect(More conversions to class types)

    subsect(Types to types)
    subsect(An empty type)
    subsect(Type substitutability)

sect(Template list processing)

