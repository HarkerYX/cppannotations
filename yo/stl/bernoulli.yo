The ti(bernoulli_distribution) is used to generate logical truth (boolean)
values with a certain probability tt(p). It is equal to a binomial
distribution for one experiment (cf ref(BINOMIAL)).

Defined types:
            verb(
    typedef bool result_type;
    struct param_type
    {
      explicit param_type(double prob = 0.5);
      double p() const;                     // returns prob
    };
            )

Constructor, members and example:
    itemization(
    itt(bernoulli_distribution(double prob = 0.5))nl()
        constructs a bernoulli distribution with probability tt(prob) of
        returning tt(true);
    itt(double p() const)nl()
        returns tt(prob);
    itt(param_type param() const)nl()
        returns the object's tt(param_type) structure;
    itt(void param(const param_type &param))
        redefines the probability of the distribution;
    itt(result_type min() const)nl()
        returns tt(false);
    itt(result_type max() const)nl()
        returns tt(true);
    itt(template<typename URNG> result_type operator()(URNG &urng))nl()
        returns the next random value from the bernoulli distribution
    itt(template<typename URNG> result_type operator())nl()
        tt((URNG &urng, param_type &param))nl()
        returns the next random value from a bernoulli distribution
        initialized by the provided tt(param) struct.
    it() Example:
        verbinclude(stl/examples/bernoulli.cc)
    )
        









