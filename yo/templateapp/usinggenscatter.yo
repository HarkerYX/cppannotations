The class template tt(GenScat) can be used by itself, to define a simple
tt(struct) containg various data members. The foundation of such a
conglomerate tt(struct) could be the following tt(Holder) tt(struct):
    verbinsert(HOLDER)(templateapp/examples/genscatter2.cc)
    Such an instant tt(struct) could be
useful in various situations; due to the nature of the tt(struct Holder), all
data types would by default be initialized to their natural defaults. E.g.,
tt(GenScat) can be used directly as follows:
        verb(
    GenScat<TYPELIST_2(int, int), Holder> gs;

    base<1>(gs).d_value = 12;
    cout << base<0>(gs).d_value << " " << base<1>(gs).d_value << endl;
        )
    The above code, when it is run from tt(main()) will write the values 0 and
12, showing that initialization and assignment to the individual fields is
simply realized.

