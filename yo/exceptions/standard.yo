All data types may be thrown as exceptions. Several exception types are
defined by the bf(C++) standard. All of these emi(standard exceptions)
  hi(exception: standard) are class types by themselves, but also offer
all facilities of the hi(exception class) tt(std::exception) class and objects
of the standard exception classes may also be considered objects of the
tt(std::exception) class. The tt(std::exception) class offers the member
        verb(
    char const *what() const;
        )
    hi(what) describing in a short textual message the nature of the
exception.

    bf(C++) defines the following standard exception classes:
    itemization(
    itht(bad_alloc)(std::bad_alloc): thrown when ti(operator new) fails;
    itht(bad_exception)(std::bad_exception): thrown when a function tries to
        generate another type of exception than declared in its 
        hi(throw list)i(function throw list);
    itht(bad_cast((std::bad_cast): thrown in the context of em(polymorphism)
        (see section ref(DYNAMICCAST));
    itht(bad_typeid)(std::bad_typeid): also thrown in the context of
        em(polymorphism) (see section ref(TYPEID));
    )
