

Objects of the class hi(error_code) tt(std:error_code) hold em(error code
values), which may be defined by the operating system or comparable low-level
functions. 

Before using tt(error_code) the tthi(system_error) header file must have
been included. 

The class offers the following constructors, members, and free functions:

bf(Constructors):
    itemization(
    itt(error_code() noexcept):
       the default construction initializes the error code with an error
        em(value) 0 and an error em(category) set to tt(&system_category());
    itt(error_code(ErrorCodeEnum e) noexcept):
       this is a member template (cf. section ref(MEMTEMP)), defining
        tt(template <class ErrorCodeEnum>). It initializes the object with the
        return value of tt(make_error_code(e)).
    )
    The copy constructor is also available.

bf(Members):
    itemization(
    itt(void assign(int val, const error_category& cat)):
       assigns new values to the current object's em(value) and em(category)
        data members;
    itt(error_category const &category() const noexcept):
       returns a reference to the object's error category;
    itt(void clear() noexcept):
       after calling this member em(value) is set to 0 and the object's error
        em(category) set to tt(&system_category());
    itt(error_condition default_error_condition() const noexcept):
       returns tt(category().default_error_condition(value()));
    itt(string message() const):
       returns tt(category().message(value()));
    itt(errorcode& operator=(ErrorCodeEnum e) noexcept):
       a member template defining
        tt(template <class ErrorCodeEnum>). It assigns the return value of 
        tt(make_error_code(e)) to the current object;
    itt(explicit operator bool() const noexcept):
       returns tt(value() != 0);
    itt(int value() const noexcept):
       returns the object's error value.
    )

bf(Free functions):
    itemization(
    itt(error_code make_error_code(errc e) noexcept):
       returns tt(error_code(static_cast<int>(e), generic_category()));
    itt(bool operator<(error_code const &lhs, error_code const &rhs)
        noexcept): 
       returns 
        verb(
    lhs.category() < rhs.category() 
    || 
    lhs.category() == rhs.category() && lhs.value() < rhs.value();
        )
    itt(std::ostream &operator<<(std::ostream & os, error_code const &ec)):
       Inserts the following text into tt(os):
        verb(
    os << ec.category().name() << ':' << ec.value().
        )
    )








