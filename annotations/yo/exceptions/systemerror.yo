The class ti(std::system_error) is derived from
tt(std::runtime_error). tt(System_error) objects can be thrown when an error
occurs that has an associated (system) error code and error category. Such
errors are typically associated with low-level (like operating system)
functions.

Before using the class tt(system_error) or related classes the
tthi(system_error) header file must be included.

When constructing tt(system_error) objects tt(error_codes) and
tt(error_categories) may be specified. These classes are now introduced, after
which tt(system_error) itself is covered in more detail.

Figure ref(SYSERRFIG) illustrates how the various components used by
tt(system_error) interact.

    figure(exceptions/systemerror)
        (System_error: associated components)
        (SYSERRFIG)

As tt(system_error) is eventually derived from tt(exception) it offers the
standard tt(what) member. Its other data element is an
tt(error_code). tt(Error_codes) can be constructed from tt(int) values, but
also from a separately defined tt(ErrorCodeEnum). tt(Error_codes) are
associated with tt(error_categories), representing a group of tt(error_code)
values. Different tt(error_categories) may use identical tt(error_code) values,
which are then distinguished by their tt(error_category. Error_codes)
represent platform dependent error values. 

When multiple tt(error_code) enums are used (the enums could be defined on
different platforms), em(error_conditions) can be defined allowing you to
group, classify, or translate tt(error_code) values (between different
platforms). Defining an tt(error_condition) is covered in section
ref(ERRCONDITONENUM).

In POSIX systems the tt(errno) variable may be associated with many, rather
cryptic symbols, and the predefined tt(enum class errc) is an attempt to use
intuitively more appealing symbols instead. Since its symbols are defined in a
strongly typed enumeration, they cannot directly be used when defining a
matching tt(error_code). Instead, the function tt(make_error_code) converts
tt(enum class errc) values to tt(int) values, so they can be used when
constructing tt(error_code) objects.

Now that the general outline has been presented, it's time to have a closer
look at the various components shown in figure ref(SYSERRFIG).
