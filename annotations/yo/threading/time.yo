Traditionally, bf(sleep)(3) or bf(select)(2) are the tools used to postpone a
program for a specified amount of time. When developing multi threaded
programs situations are frequently encountered where one thread's actions are
temporarily suspended. E.g., a program configuring a network interface may
want to show that it's busy by displaying a sequence of dots, one dot per
second, until the network interface has been configured. The thread displaying
de dots waits for a second before displaying the next dot. Once the network
interface has been configured the the other tread (displaying the dots) should
be notified that it should stop, requiring facilities to interrupt the waiting
process.

The STL offers dedicated classes operating on time which work well in
combination with threads, the topic of the next section (ref(THREADS)), but
which can also used in many other situations.


