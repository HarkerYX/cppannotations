includefile(threading/intro)

COMMENT(


END)

sect(Handling time (absolute and relative))
includefile(threading/time)

    subsect(Units: the class 'ratio')
    includefile(threading/ratio)

    lsubsect(DURATION)(Amounts of time: the class 'duration')
    includefile(threading/duration)

    subsect(Clocks measuring time)
    includefile(threading/clock)

    lsubsect(TIMEPOINT)(Points in time: the class 'time_point')
    includefile(threading/timepoint)

    subsect(Converting time to NTBSs)
    includefile(threading/ntbs)

lsect(THREADS)(Multi Threading)
includefile(threading/threading)

    subsect(The namespace `std::this_thread')
    includefile(threading/thisthread)

    lsubsect(THREAD)(The class `std::thread')
    includefile(threading/thread)

        subsubsection(Static data and threads: thread_local)
        includefile(threading/threadlocal)

        subsubsection(Exceptions and join())
        includefile(threading/joining)

lsect(MUTEX)(Synchronization (mutexes))
includefile(threading/mutex)

    subsection(Initialization in multi-threaded programs)
    includefile(threading/initialization)

lsect(LOCKS)(Locks and lock handling)
includefile(threading/locks)

    subsect(Deadlocks)
    includefile(threading/deadlocks)

sect(Event handling (condition variables))
includefile(threading/events)

    lsubsect(CONDVAR1)(The class 'std::condition_variable')
    includefile(threading/conditionvar)

    lsubsect(CONDVAR2)(The class 'std::condition_variable_any')
    includefile(threading/conditionany)

    lsubsect(CONDEX)(An example using condition variables)
    includefile(threading/conditionex)

sect(Atomic actions: mutexes not required)
includefile(threading/atomic)

sect(An example: threaded quicksort)
includefile(threading/quicksort)

sect(Shared States)
includefile(threading/shared)

lsect(FUTURE)(Asynchronous return objects: the class `std::future')
includefile(threading/future)

    lsubsect(The std::future_error exception and the std::future_errc enum)
    includefile(threading/futureerrc)

sect(Shared asynchronous return objects: the class `std::shared_future')
includefile(threading/sharedfuture)

lsect(ASYNC)(Starting a new thread: the function `std::async')
includefile(threading/async)

lsect(PACKAGE)
    (Preparing a task for execution: the class `std::packaged_task')
includefile(threading/packagedtask)

lsect(PROMISE)(The class `std::promise')
includefile(threading/promise)

sect(An example: multi-threaded compilations)
includefile(threading/compilations)



