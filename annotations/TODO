Explain how to define a const_reverse_iterator (define Type const &reference)
        also: operator-- can be private by defining
        std::reverse_iterator<iterator<Type>> a friend of iterator<Type>

Explain how to declare a function template for the current template type as
friend: 
    template <typename Type>
    bool operator==(Iterator<Type> const &lhs, Iterator<Type> const &rhs);
    
    template <typename Type>
    class Iterator: public std::iterator<std::bidirectional_iterator_tag, Type>
    {
        friend  bool operator==<>(Iterator<Type> const &lhs, 
                                Iterator<Type> const &rhs);
        ...
    };

-- all done --
